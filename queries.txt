CREATE DATABASE IF NOT EXISTS hackathon_db;
USE hackathon_db;

CREATE TABLE IF NOT EXISTS admins (
  id INT AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(255) UNIQUE NOT NULL,
  password_hash VARCHAR(255) NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS images (
  id INT AUTO_INCREMENT PRIMARY KEY,
  data LONGBLOB NOT NULL,
  candidate_id INT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (candidate_id) REFERENCES candidates(id)
);
CREATE TABLE IF NOT EXISTS candidates (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  age INT,
  degree VARCHAR(255),
  university VARCHAR(255),
  batch VARCHAR(255),
  phone VARCHAR(20),
  email VARCHAR(255) UNIQUE,
  skills VARCHAR(255),
  resume_path VARCHAR(255),
  selfie_path VARCHAR(255),
  photo_url VARCHAR(255),
  qr_code VARCHAR(255) UNIQUE,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS attendance (
  id INT AUTO_INCREMENT PRIMARY KEY,
  candidate_id INT,
  check_in_time DATETIME,
  check_out_time DATETIME,
  status VARCHAR(20) DEFAULT 'present',
  FOREIGN KEY (candidate_id) REFERENCES candidates(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS squads (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS squad_members (
  id INT AUTO_INCREMENT PRIMARY KEY,
  squad_id INT,
  candidate_id INT,
  role VARCHAR(20) DEFAULT 'member',
  FOREIGN KEY (squad_id) REFERENCES squads(id) ON DELETE CASCADE,
  FOREIGN KEY (candidate_id) REFERENCES candidates(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS hackathons (
  id INT AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  client_name VARCHAR(255),
  execution_date DATETIME,
  executed_by VARCHAR(255),
  description TEXT NOT NULL,
  registration_link VARCHAR(255),
  skills_focused VARCHAR(255),
  status VARCHAR(20) DEFAULT 'scheduled'
);